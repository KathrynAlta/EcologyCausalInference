{"title":"Demo for instrumental variables","markdown":{"yaml":{"title":"Demo for instrumental variables","author":"Katherine Siegel","date":"March 14, 2023","output":"html_document"},"headingText":"Description","containsRefs":false,"markdown":"\n\nCode to demonstrate instrumental variables in R. Adapted from the supplementary materials from Butsic, V. et al. (2017): Quasi-experimental methods enable stronger inferences from observational data in ecology. (c) Matthias Baumann (2017-01-10).\t\n\n### Scenario\nIn the Sims 2010 paper, she is interested in the effect of forest protection on socioeconomic outcomes. Here, we will use a toy dataset to explore a scenario where we need to use instrumental variables rather than OLS. \n\nFor the purposes of this exercise, we will simplify Sims's dataset. Let's say we are interested in the effect of the area of protected forests in a locality (treatment) on average monthly household consumption (outcome). We have sampled average monthly household consumption at a set of localities, where we have also recorded data on average slope and elevation and the distance to major cities. Due to the nonrandom placement of protected areas, we suspect that there are unobserved variables that influence the placement of protected areas and socioeconomic outcomes -- we have an issue of endogeneity. In this example, the unobserved variable is the historical presence of strong local institutions.\n\nIn our simulated data, we know the true relationships between the variables, which helps us see the different results we get from analyzing the effect of forest protection on the socioeconomic outcome using OLS vs. instrumental variables. \n\nWe need an instrumental variable that is correlated with the area of protected forests (the treatment) but that is not correlated with average monthly household consumption (the outcome) except through its relationship with the area of protected forests. Here, the distance between the locality and a major tributary could be an appropriate instrument, as a proxy for priority watershed status: priority watershed status is related to the conservation objective of watershed protection, and thus is related to the placement of protected areas, but there is no other mechanism through which the distance to the nearest major tributary affects average monthly household consumption. Distance to the nearest major tributary is not correlated with the unobserved historical presence of strong local institutions.\n\n## Set up\nLoad required packages. In this demo, we will use the package \"AER\".\n```{r setup, include = FALSE}\nknitr::opts_chunk$set(echo = TRUE)\n\n### Install package if you need to\ninstall.packages(\"AER\",\n                 repos = \"http://cran.us.r-project.org\")\n\n### Load required libraries\nlibrary(AER)\nlibrary(tidyverse)\n```\n\n## Simulate data\nSimulated data is handy because we know the true effect of the treatment variable\n```{r, eval = TRUE}\n### Write function to simulate a dataset\nsimulate_data <- function(){\n  \n  ## Create data variables within data.frame\n  \n  ## Make a column for observation ID\n  df <- data.frame(id = seq(1, 1000),\n                   \n                   ## Columns for covariates\n                   slope = runif(1000, min = 50, max = 100),\n                   elevation = runif(1000, min = 150, max = 185),\n                   dist_cities = runif(1000, min = 0, max = 250),\n                   \n                   ## Unobserved variable\n                   local_inst = rnorm(1000, mean = 49, sd = 17),\n                   \n                   ## A column for the error term\n                   error = rnorm(1000, mean = 0, sd = 5),\n                   \n                   ### The instrumental variable\n                   dist_tributary = rnorm(1000, mean = 400, sd = 140))\n  \n  \n  ### Add columns for treatment (level of forest protection) and response (monthly household consumption)\n  df <- df %>%\n  ### Add column for the treatment variable, related to the IV\n    mutate(forest_protect = 0.2*dist_tributary + 0.4*local_inst +\n             rnorm(100, 0, 1)) %>%\n  \n  ### Add column for the outcome variable\n    mutate(consumpt = 5*forest_protect + \n             0.07*slope + 0.05*elevation + 2*dist_cities + \n             10*local_inst + error)\n  return(df)  \n}\n```\n\n*We know that the true effect of the endogenous explanatory variable (the presence of protected forests in the locality) is a 5x increase in the response variable (the average monthly household consumption in that locality).*\n\n## Estimate the effect using ordinary least squares  \nIn each of the methods we use to estimate the effect of forest protection on socioeconomic outcomes, we will simulate the dataset 100 times and calculate the average treatment effect across the 100 simulations. Otherwise, we might estimate a treatment effect that differs from the true treatment effect due to random chance in a given simulated dataset.\n```{r}\n### Write a function to generate data and analyze using OLS \nols_fun = function(){\n  \n  ## Simulate the dataset\n  data <- simulate_data()\n  \n  ## Run OLS\n  ols <- lm(consumpt ~ forest_protect + slope + elevation + \n              dist_cities, data = data)\n  \n  ## Extract model coefficients and standard error\n  protect_coeff <- coef(summary(ols))[\"forest_protect\", \"Estimate\"]\n  protect_se <- coef(summary(ols))[\"forest_protect\", \"Std. Error\"]\n  list <- list(protect_coeff, protect_se)\n}\n\n### Apply the function on 1000 replicates\nols_sim <- replicate(100, ols_fun())\n\n### Extract the model estimates\nols_protect_est <- unlist(ols_sim[1, ])\n\n### Print mean, standard deviation, minimum, and maximum values for coefficient estimates\nc(mean(ols_protect_est), sd(ols_protect_est), \n  min(ols_protect_est), max(ols_protect_est))\n\n### Extract the standard deviations\nols_protect_sd <- unlist(ols_sim[2, ])\n\n### Print mean, standard deviation, minimum, and maximum\n### standard deviation of coefficient estimates\nc(mean(ols_protect_sd), sd(ols_protect_sd), \n  min(ols_protect_sd), max(ols_protect_sd))\n```\n\n*The effect estimated by OLS is incorrect-- it should be 5.*\n\n\n## Use instrumental variables for estimation\nImplement instrumental variables using the two stage least-squares regression. Again, we will simulate 100 datasets and calculate the average treatment effect.\n```{r}\n### Write a function to generate data and analyze using IV \niv_tsls_fun = function(){\n  \n  ## Simulate the dataset\n  data <- simulate_data()\n  \n  ## Step 1\n  ## Regress the percent of protected forest on the other explanatory variables \n  ## and our instrumental variable\n  tsls_step1 <- lm(forest_protect ~ slope + elevation + \n                       dist_cities + dist_tributary, data = data)\n  \n  ## Extract fitted values of the percent of protected forest\n  pred_value <- fitted.values(tsls_step1)\n  \n  ## Step 2\n  ## Regress our outcome of interest on the predicted value of the treatment + \n  ## the other explanatory variables\n  tsls_step2 <- lm(consumpt ~ pred_value + slope + elevation + dist_cities, \n                   data = data)\n  \n  ## Extract model coefficients and standard error\n  iv_coeff <- coef(summary(tsls_step2))[\"pred_value\", \"Estimate\"]\n  iv_se <- coef(summary(tsls_step2))[\"pred_value\", \"Std. Error\"]\n  list <- list(iv_coeff, iv_se)\n}\n\n### Apply the function on 100 replicates\niv_tsls_sim <- replicate(100, iv_tsls_fun())\n\n### Extract the model estimates\niv_tsls_est <- unlist(iv_tsls_sim[1, ])\n\n### Print mean, standard deviation, minimum, and maximum values for coefficient estimates\nc(mean(iv_tsls_est), sd(iv_tsls_est), \n  min(iv_tsls_est), max(iv_tsls_est))\n\n### Extract the standard deviations\niv_tsls_est_sd <- unlist(iv_tsls_sim[2, ])\n\n### Print mean, standard deviation, minimum, and maximum standard deviation \n### of coefficient estimates\nc(mean(iv_tsls_est_sd), sd(iv_tsls_est_sd), \n  min(iv_tsls_est_sd), max(iv_tsls_est_sd))\n```\n\n*This yields the expected estimate for the effect of forest protection on average monthly household consumption.*\n\n## Compare results from OLS vs. IV\n```{r}\n### Make single df of model estimates\nboth_methods <- cbind.data.frame(ols_protect_est,\n                                 iv_tsls_est)\n\n### Reshape the data\nboth_methods <- both_methods %>%\n  gather(method, estimate, ols_protect_est:iv_tsls_est) %>%\n  mutate(method_clean = ifelse(method == \"ols_protect_est\", \"OLS\", \"IV\"))\n\n### Visualize distribution of estimates\nggplot(both_methods, aes(x = method_clean, y = estimate)) + \n  geom_boxplot() +\n  theme_classic() +\n  labs(y = \"Estimated effect of forest protection\",\n       x = \"Estimation method\") +\n  \n  ## Add a horizontal line indicating the actual value of the effect\n  geom_hline(yintercept = 5, \n             linetype = \"dashed\",\n             color = \"red\")\n\n# ggsave(\"method_comparison.png\")\n```\n\n\n## Use instrumental variables for estimation, using AER package\nThe AER package has a built-in function, IVreg that lets you implement IV in a single line of code. Again, we will simulate 100 datasets and calculate the average treatment effect.\n\nFor more details on the AER package, see https://www.econometrics-with-r.org/12-ivr.html \n\n```{r}\n### Write a function to generate data and analyze using IV\niv_fun <- function(){\n  \n  ## Simulate the data\n  data <- simulate_data()\n  \n  ## Run with IV \n  IVreg <- ivreg(consumpt ~ forest_protect + slope + \n                   elevation + dist_cities | dist_tributary + \n                   slope + elevation + dist_cities, data = data)\n  \n  ## Extract model coefficients and standard error\n  protect_coeff <- coef(summary(IVreg))[\"forest_protect\", \"Estimate\"]\n  protect_se <- coef(summary(IVreg))[\"forest_protect\", \"Std. Error\"]\n  list <- list(protect_coeff,protect_se)\n}\n\n### Apply the IV function on 100 replicates\niv_sim <- replicate(100, iv_fun())\n\n### Extract the model estimates\niv_protect_est <- unlist(iv_sim[1, ])\n\n### Print mean, standard deviation, minimum, and maximum values for coefficient estimates\nc(mean(iv_protect_est), sd(iv_protect_est), \n  min(iv_protect_est), max(iv_protect_est))\n\n### Extract the standard deviations\niv_protect_sd <- unlist(iv_sim[2, ])\n\n### Print mean, standard deviation, minimum, and maximum \n### standard deviation of coefficient estimates\nc(mean(iv_protect_sd), sd(iv_protect_sd), \n  min(iv_protect_sd), max(iv_protect_sd))\n```\n*Again, this yields the expected estimate for the effect of forest protection on average monthly household consumption.*\n\n### Check relevance of instrument\n#### smaller\n```{r}\n### Simulate a dataset\ndata_for_iv <- simulate_data()\n\n### Write the first stage of two stage procedure\nfirst_stage <- lm(forest_protect ~ slope + elevation + \n                    dist_cities + dist_tributary,\n                  data = data_for_iv)\n\n### F test to see if the instrument explains enough of the explanatory variable\ninstr_ftest <- waldtest(first_stage, .~.-dist_tributary)\nprint(instr_ftest)\n\n\n### visualize\ndata_for_iv %>%\n  ggplot(aes(x = local_inst, y = consumpt)) + geom_point()\n```\nThe F_test value is high and the p-value is low --> reject the null hypothesis that the instrument is irrelevant.\n\n\n## References cited\nButsic, V, DJ Lewis, VC Radeloff, M Baumann, & T Kuemmerle. 2017. Quasi-experimental methods enable stronger inferences from observational data in ecology. *Basic & Applied Ecology*, 19, 1-10.\n\nSims, KRE. 2010. Conservation and development: evidence from Thai protected areas. *Journal of Environmental Economics & Management*, 60, 94-114.\n","srcMarkdownNoYaml":"\n\n## Description\nCode to demonstrate instrumental variables in R. Adapted from the supplementary materials from Butsic, V. et al. (2017): Quasi-experimental methods enable stronger inferences from observational data in ecology. (c) Matthias Baumann (2017-01-10).\t\n\n### Scenario\nIn the Sims 2010 paper, she is interested in the effect of forest protection on socioeconomic outcomes. Here, we will use a toy dataset to explore a scenario where we need to use instrumental variables rather than OLS. \n\nFor the purposes of this exercise, we will simplify Sims's dataset. Let's say we are interested in the effect of the area of protected forests in a locality (treatment) on average monthly household consumption (outcome). We have sampled average monthly household consumption at a set of localities, where we have also recorded data on average slope and elevation and the distance to major cities. Due to the nonrandom placement of protected areas, we suspect that there are unobserved variables that influence the placement of protected areas and socioeconomic outcomes -- we have an issue of endogeneity. In this example, the unobserved variable is the historical presence of strong local institutions.\n\nIn our simulated data, we know the true relationships between the variables, which helps us see the different results we get from analyzing the effect of forest protection on the socioeconomic outcome using OLS vs. instrumental variables. \n\nWe need an instrumental variable that is correlated with the area of protected forests (the treatment) but that is not correlated with average monthly household consumption (the outcome) except through its relationship with the area of protected forests. Here, the distance between the locality and a major tributary could be an appropriate instrument, as a proxy for priority watershed status: priority watershed status is related to the conservation objective of watershed protection, and thus is related to the placement of protected areas, but there is no other mechanism through which the distance to the nearest major tributary affects average monthly household consumption. Distance to the nearest major tributary is not correlated with the unobserved historical presence of strong local institutions.\n\n## Set up\nLoad required packages. In this demo, we will use the package \"AER\".\n```{r setup, include = FALSE}\nknitr::opts_chunk$set(echo = TRUE)\n\n### Install package if you need to\ninstall.packages(\"AER\",\n                 repos = \"http://cran.us.r-project.org\")\n\n### Load required libraries\nlibrary(AER)\nlibrary(tidyverse)\n```\n\n## Simulate data\nSimulated data is handy because we know the true effect of the treatment variable\n```{r, eval = TRUE}\n### Write function to simulate a dataset\nsimulate_data <- function(){\n  \n  ## Create data variables within data.frame\n  \n  ## Make a column for observation ID\n  df <- data.frame(id = seq(1, 1000),\n                   \n                   ## Columns for covariates\n                   slope = runif(1000, min = 50, max = 100),\n                   elevation = runif(1000, min = 150, max = 185),\n                   dist_cities = runif(1000, min = 0, max = 250),\n                   \n                   ## Unobserved variable\n                   local_inst = rnorm(1000, mean = 49, sd = 17),\n                   \n                   ## A column for the error term\n                   error = rnorm(1000, mean = 0, sd = 5),\n                   \n                   ### The instrumental variable\n                   dist_tributary = rnorm(1000, mean = 400, sd = 140))\n  \n  \n  ### Add columns for treatment (level of forest protection) and response (monthly household consumption)\n  df <- df %>%\n  ### Add column for the treatment variable, related to the IV\n    mutate(forest_protect = 0.2*dist_tributary + 0.4*local_inst +\n             rnorm(100, 0, 1)) %>%\n  \n  ### Add column for the outcome variable\n    mutate(consumpt = 5*forest_protect + \n             0.07*slope + 0.05*elevation + 2*dist_cities + \n             10*local_inst + error)\n  return(df)  \n}\n```\n\n*We know that the true effect of the endogenous explanatory variable (the presence of protected forests in the locality) is a 5x increase in the response variable (the average monthly household consumption in that locality).*\n\n## Estimate the effect using ordinary least squares  \nIn each of the methods we use to estimate the effect of forest protection on socioeconomic outcomes, we will simulate the dataset 100 times and calculate the average treatment effect across the 100 simulations. Otherwise, we might estimate a treatment effect that differs from the true treatment effect due to random chance in a given simulated dataset.\n```{r}\n### Write a function to generate data and analyze using OLS \nols_fun = function(){\n  \n  ## Simulate the dataset\n  data <- simulate_data()\n  \n  ## Run OLS\n  ols <- lm(consumpt ~ forest_protect + slope + elevation + \n              dist_cities, data = data)\n  \n  ## Extract model coefficients and standard error\n  protect_coeff <- coef(summary(ols))[\"forest_protect\", \"Estimate\"]\n  protect_se <- coef(summary(ols))[\"forest_protect\", \"Std. Error\"]\n  list <- list(protect_coeff, protect_se)\n}\n\n### Apply the function on 1000 replicates\nols_sim <- replicate(100, ols_fun())\n\n### Extract the model estimates\nols_protect_est <- unlist(ols_sim[1, ])\n\n### Print mean, standard deviation, minimum, and maximum values for coefficient estimates\nc(mean(ols_protect_est), sd(ols_protect_est), \n  min(ols_protect_est), max(ols_protect_est))\n\n### Extract the standard deviations\nols_protect_sd <- unlist(ols_sim[2, ])\n\n### Print mean, standard deviation, minimum, and maximum\n### standard deviation of coefficient estimates\nc(mean(ols_protect_sd), sd(ols_protect_sd), \n  min(ols_protect_sd), max(ols_protect_sd))\n```\n\n*The effect estimated by OLS is incorrect-- it should be 5.*\n\n\n## Use instrumental variables for estimation\nImplement instrumental variables using the two stage least-squares regression. Again, we will simulate 100 datasets and calculate the average treatment effect.\n```{r}\n### Write a function to generate data and analyze using IV \niv_tsls_fun = function(){\n  \n  ## Simulate the dataset\n  data <- simulate_data()\n  \n  ## Step 1\n  ## Regress the percent of protected forest on the other explanatory variables \n  ## and our instrumental variable\n  tsls_step1 <- lm(forest_protect ~ slope + elevation + \n                       dist_cities + dist_tributary, data = data)\n  \n  ## Extract fitted values of the percent of protected forest\n  pred_value <- fitted.values(tsls_step1)\n  \n  ## Step 2\n  ## Regress our outcome of interest on the predicted value of the treatment + \n  ## the other explanatory variables\n  tsls_step2 <- lm(consumpt ~ pred_value + slope + elevation + dist_cities, \n                   data = data)\n  \n  ## Extract model coefficients and standard error\n  iv_coeff <- coef(summary(tsls_step2))[\"pred_value\", \"Estimate\"]\n  iv_se <- coef(summary(tsls_step2))[\"pred_value\", \"Std. Error\"]\n  list <- list(iv_coeff, iv_se)\n}\n\n### Apply the function on 100 replicates\niv_tsls_sim <- replicate(100, iv_tsls_fun())\n\n### Extract the model estimates\niv_tsls_est <- unlist(iv_tsls_sim[1, ])\n\n### Print mean, standard deviation, minimum, and maximum values for coefficient estimates\nc(mean(iv_tsls_est), sd(iv_tsls_est), \n  min(iv_tsls_est), max(iv_tsls_est))\n\n### Extract the standard deviations\niv_tsls_est_sd <- unlist(iv_tsls_sim[2, ])\n\n### Print mean, standard deviation, minimum, and maximum standard deviation \n### of coefficient estimates\nc(mean(iv_tsls_est_sd), sd(iv_tsls_est_sd), \n  min(iv_tsls_est_sd), max(iv_tsls_est_sd))\n```\n\n*This yields the expected estimate for the effect of forest protection on average monthly household consumption.*\n\n## Compare results from OLS vs. IV\n```{r}\n### Make single df of model estimates\nboth_methods <- cbind.data.frame(ols_protect_est,\n                                 iv_tsls_est)\n\n### Reshape the data\nboth_methods <- both_methods %>%\n  gather(method, estimate, ols_protect_est:iv_tsls_est) %>%\n  mutate(method_clean = ifelse(method == \"ols_protect_est\", \"OLS\", \"IV\"))\n\n### Visualize distribution of estimates\nggplot(both_methods, aes(x = method_clean, y = estimate)) + \n  geom_boxplot() +\n  theme_classic() +\n  labs(y = \"Estimated effect of forest protection\",\n       x = \"Estimation method\") +\n  \n  ## Add a horizontal line indicating the actual value of the effect\n  geom_hline(yintercept = 5, \n             linetype = \"dashed\",\n             color = \"red\")\n\n# ggsave(\"method_comparison.png\")\n```\n\n\n## Use instrumental variables for estimation, using AER package\nThe AER package has a built-in function, IVreg that lets you implement IV in a single line of code. Again, we will simulate 100 datasets and calculate the average treatment effect.\n\nFor more details on the AER package, see https://www.econometrics-with-r.org/12-ivr.html \n\n```{r}\n### Write a function to generate data and analyze using IV\niv_fun <- function(){\n  \n  ## Simulate the data\n  data <- simulate_data()\n  \n  ## Run with IV \n  IVreg <- ivreg(consumpt ~ forest_protect + slope + \n                   elevation + dist_cities | dist_tributary + \n                   slope + elevation + dist_cities, data = data)\n  \n  ## Extract model coefficients and standard error\n  protect_coeff <- coef(summary(IVreg))[\"forest_protect\", \"Estimate\"]\n  protect_se <- coef(summary(IVreg))[\"forest_protect\", \"Std. Error\"]\n  list <- list(protect_coeff,protect_se)\n}\n\n### Apply the IV function on 100 replicates\niv_sim <- replicate(100, iv_fun())\n\n### Extract the model estimates\niv_protect_est <- unlist(iv_sim[1, ])\n\n### Print mean, standard deviation, minimum, and maximum values for coefficient estimates\nc(mean(iv_protect_est), sd(iv_protect_est), \n  min(iv_protect_est), max(iv_protect_est))\n\n### Extract the standard deviations\niv_protect_sd <- unlist(iv_sim[2, ])\n\n### Print mean, standard deviation, minimum, and maximum \n### standard deviation of coefficient estimates\nc(mean(iv_protect_sd), sd(iv_protect_sd), \n  min(iv_protect_sd), max(iv_protect_sd))\n```\n*Again, this yields the expected estimate for the effect of forest protection on average monthly household consumption.*\n\n### Check relevance of instrument\n#### smaller\n```{r}\n### Simulate a dataset\ndata_for_iv <- simulate_data()\n\n### Write the first stage of two stage procedure\nfirst_stage <- lm(forest_protect ~ slope + elevation + \n                    dist_cities + dist_tributary,\n                  data = data_for_iv)\n\n### F test to see if the instrument explains enough of the explanatory variable\ninstr_ftest <- waldtest(first_stage, .~.-dist_tributary)\nprint(instr_ftest)\n\n\n### visualize\ndata_for_iv %>%\n  ggplot(aes(x = local_inst, y = consumpt)) + geom_point()\n```\nThe F_test value is high and the p-value is low --> reject the null hypothesis that the instrument is irrelevant.\n\n\n## References cited\nButsic, V, DJ Lewis, VC Radeloff, M Baumann, & T Kuemmerle. 2017. Quasi-experimental methods enable stronger inferences from observational data in ecology. *Basic & Applied Ecology*, 19, 1-10.\n\nSims, KRE. 2010. Conservation and development: evidence from Thai protected areas. *Journal of Environmental Economics & Management*, 60, 94-114.\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":"auto","echo":true,"output":"html_document","warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"show","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":true,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"toc-depth":4,"output-file":"iv_demo.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.39","theme":"cosmo","title":"Demo for instrumental variables","author":"Katherine Siegel","date":"March 14, 2023"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}