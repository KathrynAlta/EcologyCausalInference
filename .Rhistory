install.packages('rmarkdown')
install.packages("knitr")
[Assignments](https://LauraDee.github.io/EcologyCausalInference/assignments.html#final-project-option-1-data-analysis-project) tab for descriptions of the requirements for the write-up)
## May 1 is last day of class - Projects Due Friday May 2
Final project write-ups due (see [Assignments](https://LauraDee.github.io/EcologyCausalInference/assignments.html#final-project-option-1-data-analysis-project) tab for descriptions of the requirements for the write-up)
project:
type: website
library(quartets)
library(datasauRus)
install.package('library(datasauRus)')
install.package('datasauRus')
install.packages('datasauRus')
n <- 1000000
tibble(
roll_1 = sample(1:6, n, replace = TRUE),
roll_2 = sample(1:6, n, replace = TRUE),
) |>
reframe(roll_1 + roll_2 == 2) |>
pull() |>
sum() / n
install.packages('quartets')
knitr::opts_chunk$set(echo = TRUE)
## Load Packages
library(ggdag)
## Load Packages
install.packages("ggdag")
library(ggdag)
## Load Packages
install.packages("tidygraph")
install.packages(c("dagitty", "ggdag"))
install.packages("tidygraph")
knitr::opts_chunk$set(echo = TRUE)
install.packages("knitr")
knitr::opts_chunk$set(echo = TRUE)
## Load Packages
install.packages("tidygraph")
library(ggdag)
install.packages("ggdag")
## Load Packages
# install.packages("tidygraph")
# install.packages("ggdag")
library(ggdag)
## Load Packages
# install.packages("tidygraph")
install.packages("ggdag")
library(ggdag)
install.packages("ggdag")
install.packages("polyclip")
install.packages("polyclip")
install.packages("ggdag")
install.packages("digest")
install.packages("ggdag")
library(ggdag)
## Load Packages
# install.packages("tidygraph")
# install.packages("ggdag")
library(ggdag)
require(knitr)
library(dagitty)
require(tidyr)
require(ddplyr)
library(tidyverse)
install.packages("tidyverse")
## Load Packages
# install.packages("tidygraph")
# install.packages("ggdag")
library(ggdag)
require(knitr)
library(dagitty)
require(tidyr)
require(ddplyr)
library(tidyverse)
## Specify the DAG
DAG_invasion_effects <- dagify(
invasion ~ nutrients + climate + landuse,
native_biodiversity ~ invasion + nutrients + climate,
nutrients ~ landuse
)
plot(DAG_invasion_effects)
DAG_invasion_effects <- dagify(
invasion ~ nutrients + climate + landuse,
native_biodiversity ~ invasion + nutrients + climate,
nutrients ~ landuse ,
exposure = "invasion", #wont run if current biodiersity  also effects current exotic because then the graph is not acyclic
outcome = "native_biodiversity",
labels = c(outcome = "Native Biodiversity",
exposure = "Invasion"))
set.seed(124)
ggdag(DAG_invasion_effects,
use_labels = "label")
ggdag_status(DAG_invasion_effects,
use_labels = "label",
text = TRUE,
label_alpha = 0.5) + theme_dag()
#identify the open paths that need to be adjusted for
paths(DAG_invasion_effects)
#plot the open  paths
ggdag_paths(DAG_invasion_effects)
ggdag_paths(DAG_invasion_effects, shadow = TRUE) #Also, do not forget to set the argument shadow = TRUE, so that the arrows from the adjusted nodes are included
#you can identify "descendant nodes"
ggdag_descendants(DAG_invasion_effects, "landuse")
#identify the covariaters need to be adjusted for to meet the back-door criterion
adjustmentSets(DAG_invasion_effects)
# Finally, you can also visulaize the variables that need to be adjusted for (which is also told to you by the adjustmentSets() function
ggdag_adjustment_set(DAG_invasion_effects, shadow = TRUE)
#Also, do not forget to set the argument shadow = TRUE, so that the arrows from the adjusted nodes are included.
impliedConditionalIndependencies(DAG_invasion_effects)
richness_dag <- dagify(Native_psy ~ Exotic_psy + NPKTreatment + Exotics_yr0 + Native_yr0 + Ndep_sy + Climate_sy + SoilFert_yr0 +  livestock_sy + Dist_to_Road_s + Oldfield_past_s + pastlivestock_yr0,
Exotic_psy ~  NPKTreatment + Exotics_yr0 + Native_yr0 + Ndep_sy + Climate_sy + SoilFert_yr0 +
livestock_sy + Dist_to_Road_s + Oldfield_past_s + pastlivestock_yr0,
Ndep_sy ~  Climate_sy,
Exotics_yr0 ~ Climate_sy + Ndep_sy + pastlivestock_yr0 + livestock_sy + Dist_to_Road_s + SoilFert_yr0,
Native_yr0 ~ Climate_sy + pastlivestock_yr0 + livestock_sy + SoilFert_yr0,
SoilFert_yr0 ~ Ndep_sy + Oldfield_past_s +  livestock_sy +  pastlivestock_yr0,
Oldfield_past_s  ~ Dist_to_Road_s,
livestock_sy  ~ pastlivestock_yr0 + Dist_to_Road_s,
pastlivestock_yr0 ~ Dist_to_Road_s,
exposure = "Exotic_psy", #wont run if current richess also effects current exotic
outcome = "Native_psy",
labels = c(outcome = "richness",
exposure = "Exotic"))
set.seed(124)
ggdag(richness_dag,
use_labels = "label")
# plot the DAG with ggdag
ggdag_status(richness_dag,
use_labels = "label",
text = TRUE,
label_alpha = 0.5) + theme_dag()
# We can find and print all the paths between x and y using the paths() function from the dagitty package. We can see that there are three open paths between x and y:
paths(richness_dag)
# print conditional independences
impliedConditionalIndependencies(richness_dag)
# Now, lets plot the open paths
ggdag_paths(richness_dag, shadow = TRUE)
#to identify descendants
ggdag_descendants(richness_dag, "Climate_sy")
ggdag_descendants(richness_dag, "Ndep_sy")
ggdag_descendants(richness_dag, "SoilFert_yr0")
#identify the paths that need to be adjusted for - because we have specified the exposure to be invasive abundance and outcome to be richness, we are looking at the direct effect (not the mediated effect), so the direct and total will be thed same here:
adjustmentSets(richness_dag, effect = "direct")
adjustmentSets(richness_dag, effect = "total")
#Let's plot the identified the adjustment set to meet the backdoor criterion
ggdag_adjustment_set(richness_dag, shadow = TRUE)
NPK_dag <- dagify(Native_psy ~ Exotic_psy + NPKTreatment + Exotics_yr0 + Native_yr0 + Ndep_sy + Climate_sy + SoilFert_yr0 +  livestock_sy + Dist_to_Road_s + Oldfield_past_s + pastlivestock_yr0,
Exotic_psy ~  NPKTreatment + Exotics_yr0 + Native_yr0 + Ndep_sy + Climate_sy + SoilFert_yr0 +
livestock_sy + Dist_to_Road_s + Oldfield_past_s + pastlivestock_yr0,
Ndep_sy ~  Climate_sy,
Exotics_yr0 ~ Climate_sy + Ndep_sy + pastlivestock_yr0 + livestock_sy + Dist_to_Road_s + SoilFert_yr0,
Native_yr0 ~ Climate_sy + pastlivestock_yr0 + livestock_sy + SoilFert_yr0,
SoilFert_yr0 ~ Ndep_sy + Oldfield_past_s +  livestock_sy +  pastlivestock_yr0,
Oldfield_past_s  ~ Dist_to_Road_s,
livestock_sy  ~ pastlivestock_yr0 + Dist_to_Road_s,
pastlivestock_yr0 ~ Dist_to_Road_s,
exposure = "NPKTreatment",
outcome = "Native_psy",
labels = c(outcome = "richness",
exposure = "NPKTreatment"))
ggdag_status(NPK_dag,
use_labels = "label",
text = TRUE,
label_alpha = 0.5) + theme_dag()
adjustmentSets(NPK_dag, effect = "total")
seychelles <- dagify(
regime_shift ~ initial_algae + wave_exposure + herbivore_biomass + depth + nutrients + branching_coral + structural_complexity,
initial_algae ~ wave_exposure + herbivore_biomass + nutrients,
herbivore_biomass ~ mpa + structural_complexity,
nutrients ~ depth,
branching_coral ~ mpa + depth + wave_exposure,
structural_complexity ~ branching_coral
)
plot(seychelles)
DAG_coral_effects <- dagify(
regime_shift ~ initial_algae + wave_exposure + herbivore_biomass + depth + nutrients + branching_coral + structural_complexity,
initial_algae ~ wave_exposure + herbivore_biomass + nutrients,
herbivore_biomass ~ mpa + structural_complexity,
nutrients ~ depth,
branching_coral ~ mpa + depth + wave_exposure,
structural_complexity ~ branching_coral
)
DAG_coral_effects <- dagify(
regime_shift ~ initial_algae + wave_exposure + herbivore_biomass + depth + nutrients + branching_coral + structural_complexity,
initial_algae ~ wave_exposure + herbivore_biomass + nutrients,
herbivore_biomass ~ mpa + structural_complexity,
nutrients ~ depth,
branching_coral ~ mpa + depth + wave_exposure,
structural_complexity ~ branching_coral
)
set.seed(124)
ggdag(DAG_coral_effects,
use_labels = "label")
plot(DAG_coral_effects)
set.seed(124)
ggdag(DAG_invasion_effects,
use_labels = "label")
ggdag(DAG_coral_effects,
use_labels = "label")
ggdag(DAG_coral_effects,
use_labels = "label")
